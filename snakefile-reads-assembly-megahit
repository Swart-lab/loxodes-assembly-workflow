# Rules for assembly of genomic DNAseq reads

# Combined list of input files for SPAdes combined assembly (metagenome)
def combine_megahit_input_files(wildcards):
    r12=expand("data/reads-trim/{lib}_R12_ktrim_qtrim{qtrimvals}.fq.gz",
               lib=config['libraries_by_sp'][wildcards.sp]['illumina-bulk'],
               qtrimvals=wildcards.qtrimvals)
    r12.sort()
    return ','.join(r12)

# Combined list of input files for SPAdes combined assembly (metagenome)
def combine_megahit_input_files_fwd(wildcards):
    r1=expand("data/reads-trim/{lib}_R1_ktrim_qtrim{qtrimvals}.fq.gz",
               lib=config['libraries_by_sp'][wildcards.sp]['illumina-bulk'],
               qtrimvals=wildcards.qtrimvals)
    r1.sort()
    return ','.join(r1)

# Combined list of input files for SPAdes combined assembly (metagenome)
def combine_megahit_input_files_rev(wildcards):
    r2=expand("data/reads-trim/{lib}_R2_ktrim_qtrim{qtrimvals}.fq.gz",
               lib=config['libraries_by_sp'][wildcards.sp]['illumina-bulk'],
               qtrimvals=wildcards.qtrimvals)
    r2.sort()
    return ','.join(r2)

rule megahit_k141_comb:
    # Combined assembly for each species, using all metagenomic libraries available for that species
    input:
        lambda wildcards: expand("data/reads-trim/{lib}_R12_ktrim_qtrim{qtrimvals}.fq.gz",lib=config['libraries_by_sp'][wildcards.sp]['illumina-bulk'],qtrimvals=wildcards.qtrimvals)
    output:
        contigs="assembly/megahit-comb_{sp}_q{qtrimvals}/megahit-comb_{sp}_q{qtrimvals}/megahit-comb_{sp}_q{qtrimvals}.contigs.fa",
        k141="assembly/megahit-comb_{sp}_q{qtrimvals}/megahit-comb_{sp}_q{qtrimvals}/intermediate_contigs/k141.contigs.fa"
    threads: 32
    conda: "envs/megahit.yml"
    log: "logs/megahit_k141_comb.{sp}_q{qtrimvals}.log"
    params:
        pe_inargs=combine_megahit_input_files,
        mem=200000000000,
        outdir="assembly/megahit-comb_{sp}_q{qtrimvals}/megahit-comb_{sp}_q{qtrimvals}",
        outprefix="megahit-comb_{sp}_q{qtrimvals}",
        klist="21,29,39,59,79,99,119,141"
    shell:
        "rm -r {params.outdir};" # Remove folder first because Snakemake will touch the folder and megahit will refuse to overwrite
        "megahit --12 {params.pe_inargs} --memory {params.mem} --num-cpu-threads {threads} --k-list {params.klist} --out-dir {params.outdir} --out-prefix {params.outprefix} 2> {log};"

rule megahit_k141_comb_tidy:
    # Tidy up otuput of megahit by creating symlinks and fastg file
    input:
        contigs="assembly/megahit-comb_{sp}_q{qtrimvals}/megahit-comb_{sp}_q{qtrimvals}/megahit-comb_{sp}_q{qtrimvals}.contigs.fa",
        k141="assembly/megahit-comb_{sp}_q{qtrimvals}/megahit-comb_{sp}_q{qtrimvals}/intermediate_contigs/k141.contigs.fa"
    output:
        scaffolds="assembly/megahit-comb_{sp}_q{qtrimvals}/scaffolds.fasta", # This will be a symlink
        fastg="assembly/megahit-comb_{sp}_q{qtrimvals}/assembly_graph.fastg"
    threads: 2
    conda: "envs/megahit.yml"
    shell:
        "ln -sr {input.contigs} {output.scaffolds};" # create symbolic, relative link, the -r option is necessary otherwise will break
        "megahit_toolkit contig2fastg 141 {input.k141} > {output.fastg};" # Create Fastg file from contigs of highest kmer used
