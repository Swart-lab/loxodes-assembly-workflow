# Rules for QC and initial annotation of genomic DNAseq reads

import glob # Needed for functions below

rule quast_spades_k127_comb:
    # Quality metrics of combined assembly
    input:
        expand("assembly/spades-comb_{sp}_q{qtrimvals}/scaffolds.fasta",sp=config['species'],qtrimvals=config['qtrimvals'])
    output:
        "qc/quast_spades_k127_comb/report.html"
    threads: 16
    conda: "envs/quast.yml"
    log: "logs/quast_spades_k127_comb_{wildcards.sp}_q{wildcards.qtrimvals}.log"
    shell:
        "quast.py -o qc/quast_spades_k127_comb -t {threads} -m 500 -s -L --large {input} &> {log}"

def get_spades_multiple_input_corr_reads_fwd(wildcards):
    r1=glob.glob("assembly/spades-comb_"+wildcards.sp+"_q"+wildcards.qtrimvals+"/corrected/*_R12_ktrim_qtrim"+wildcards.qtrimvals+"_1.00.*_0.cor.fastq.gz")
    r1.sort()
    return r1

def get_spades_multiple_input_corr_reads_rev(wildcards):
    r2=glob.glob("assembly/spades-comb_"+wildcards.sp+"_q"+wildcards.qtrimvals+"/corrected/*_R12_ktrim_qtrim"+wildcards.qtrimvals+"_2.00.*_0.cor.fastq.gz")
    r2.sort()
    return r2

rule link_spades_assem_output:
    input:
        scaffolds="assembly/spades{options}/scaffolds.fasta",
        fastg="assembly/spades{options}/assembly_graph.fastg"
    output:
        scaffolds="assembly/latest/spades{options}.scaffolds.fasta",
        fastg="assembly/latest/spades{options}.assembly_graph.fastg"
    shell:
        "ln -sr {input.scaffolds} {output.scaffolds};"
        "ln -sr {input.fastg} {output.fastg}"

rule gbtquick_spades_comb:
    input:
        scaffolds="assembly/spades-comb_{sp}_q{qtrimvals}/scaffolds.fasta",
        prodigal_gff="annotation/spades-comb_{sp}_q{qtrimvals}/spades-comb_{sp}_q{qtrimvals}.prodigal.gff"
    conda: "envs/gbtquick.yml"
    log: "logs/gbtquick_spades_comb.{sp}_q{qtrimvals}.log"
    output:
        covstats="annotation/spades-comb_{sp}_q{qtrimvals}/spades-comb_{sp}_q{qtrimvals}.gbtquick.covstats.tsv",
        blobplot="annotation/spades-comb_{sp}_q{qtrimvals}/spades-comb_{sp}_q{qtrimvals}.gbtquick.blobplot.png"
    params:
        prefix="annotation/spades-comb_{sp}_q{qtrimvals}/spades-comb_{sp}_q{qtrimvals}.gbtquick"
    shell:
        "opt/gbtquick/gbtquick.py -a spades -f {input.scaffolds} -o {params.prefix} --plot --plot_fmt png --prodigal_gff {input.prodigal_gff} &> {log}"

rule gbtquick_spades_sc:
    input:
        scaffolds="assembly/spades-sc_{sp}_q{qtrimvals}/scaffolds.fasta",
        prodigal_gff="annotation/spades-sc_{sp}_q{qtrimvals}/spades-sc_{sp}_q{qtrimvals}.prodigal.gff"
    conda: "envs/gbtquick.yml"
    log: "logs/gbtquick_spades_sc.{sp}_q{qtrimvals}.log"
    output:
        covstats="annotation/spades-sc_{sp}_q{qtrimvals}/spades-sc_{sp}_q{qtrimvals}.gbtquick.covstats.tsv",
        blobplot="annotation/spades-sc_{sp}_q{qtrimvals}/spades-sc_{sp}_q{qtrimvals}.gbtquick.blobplot.png"
    params:
        prefix="annotation/spades-sc_{sp}_q{qtrimvals}/spades-sc_{sp}_q{qtrimvals}.gbtquick"
    shell:
        "opt/gbtquick/gbtquick.py -a spades -f {input.scaffolds} -o {params.prefix} --plot --plot_fmt png --prodigal_gff {input.prodigal_gff}"
