# Rules for preprocessing and QC of transcriptomic RNAseq reads

PHYLOFLASH_DBHOME="db/phyloFlash/132"

rule combine_reads_rnaseq:
    input:
        # fwd=get_input_reads_fwd,
        # rev=get_input_reads_rev
        fwd=lambda wildcards: config['reads_rnaseq_raw'][wildcards.lib]['fwd'],
        rev=lambda wildcards: config['reads_rnaseq_raw'][wildcards.lib]['rev']
    output:
        fwd="data/reads-rnaseq-combine/{lib}_R1.fq.gz",
        rev="data/reads-rnaseq-combine/{lib}_R2.fq.gz"
    conda: "envs/bbmap.yml"
    threads: 8
    params:
        # Allocate at least one thread to pigz, otherwise one fewer than total
        pigzthreads=lambda wildcards, threads: threads - 1 if (threads > 1) else 1
    shell:
        "gzip -cd {input.fwd} | pigz -p {params.pigzthreads} -c > {output.fwd};"
        "gzip -cd {input.rev} | pigz -p {params.pigzthreads} -c > {output.rev};"

rule bbduk_qtrim_ktrim_rnaseq:
    input:
        fwd="data/reads-rnaseq-combine/{lib}_R1.fq.gz",
        rev="data/reads-rnaseq-combine/{lib}_R2.fq.gz"
    output:
        "data/reads-rnaseq-trim/{lib}_R12_ktrim_qtrim{qtrimvals}.fq.gz"
    threads: 8
    log: "logs/bbduk_qtrim_ktrim_rnaseq.{lib}_q{qtrimvals}.log"
    conda: "envs/bbmap.yml"
    shell:
        "bbduk.sh -Xmx10g ref=resources/adapters.fa,resources/phix174_ill.ref.fa.gz threads={threads} in={input.fwd} in2={input.rev} ktrim=r qtrim=rl trimq={wildcards.qtrimvals} minlength=25 out={output} 2> {log}"

rule phyloflash_rnaseq:
    input:
        fwd="data/reads-rnaseq-combine/{lib}_R1.fq.gz",
        rev="data/reads-rnaseq-combine/{lib}_R2.fq.gz"
    output:
        "qc/phyloFlash_rnaseq/{lib}.phyloFlash.tar.gz"
    threads: 8
    conda: "envs/phyloFlash.yml"
    log: "logs/phyloflash_rnaseq.{lib}.log"
    params:
        db=PHYLOFLASH_DBHOME,
        readlimit=1000000
    shell:
        "phyloFlash.pl -lib {wildcards.lib} -readlength 150 -read1 {input.fwd} -read2 {input.rev} -readlimit {params.readlimit} -CPUs {threads} -almosteverything -dbhome {params.db} 2> {log};"
        "mv {wildcards.lib}.phyloFlash* qc/phyloFlash_rnaseq/;"

rule filter_rnaseq_chlamy:
    input: "data/reads-rnaseq-trim/{lib}_R12_ktrim_qtrim{qtrimvals}.fq.gz"
    threads: 8
    conda: "envs/bbmap.yml"
    output:
        outu="data/reads-rnaseq-filter/{lib}_R12_ktrim_qtrim{qtrimvals}_bbmap_nochlamy.R12.fq.gz",
        outm="data/reads-rnaseq-filter/{lib}_R12_ktrim_qtrim{qtrimvals}_bbmap_chlamy.R12.bam",
        scafstats="data/reads-rnaseq-filter/{lib}_R12_ktrim_qtrim{qtrimvals}_bbmap_nochlamy.scafstats"
    log: "logs/filter_rnaseq_chlamy.{lib}.q{qtrimvals}.log"
    params: 
        ref="db/chlamydomonas/Creinhardtii/v5.6/assembly/Creinhardtii_281_v5.0.fa"
    shell:
        "bbmap.sh -Xmx40g nodisk=t minid=0.98 interleaved=t threads={threads} ref={params.ref} in={input} outu={output.outu} outm={output.outm} scafstats={output.scafstats}"

rule split_filter_rnaseq_chlamy_reads:
    input: "data/reads-rnaseq-filter/{lib}_R12_ktrim_qtrim{qtrimvals}_bbmap_nochlamy.R12.fq.gz"
    threads: 8
    conda: "envs/bbmap.yml"
    output:
        readf="data/reads-rnaseq-filter/{lib}_R12_ktrim_qtrim{qtrimvals}_bbmap_nochlamy.R1.fq.gz",
        readr="data/reads-rnaseq-filter/{lib}_R12_ktrim_qtrim{qtrimvals}_bbmap_nochlamy.R2.fq.gz"
    log: "logs/split_filter_rnaseq_chlamy_reads.{lib}.q{qtrimvals}.log"
    shell:
        "reformat.sh -Xmx10g threads={threads} interleaved=t in={input} out={output.readf} out2={output.readr}"
